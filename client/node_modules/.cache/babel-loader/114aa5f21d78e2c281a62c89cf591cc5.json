{"ast":null,"code":"var _jsxFileName = \"/Users/robertsalas/Repos/MemoriesProj/server/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Paper, Typography } from '@material-ui/core';\nimport FileBase from \"react-file-base64\";\nimport { useDispatch } from 'react-redux';\nimport { createPost, updatePost } from \"../../actions/posts.js\";\nimport { useSelector } from 'react-redux';\nimport useStyles from \"./styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFiles: \"\"\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: base64 => {\n            setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"Nub48Nqy2/9nPbwK0X6F9Kd5NNk=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/robertsalas/Repos/MemoriesProj/server/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Paper","Typography","FileBase","useDispatch","createPost","updatePost","useSelector","useStyles","Form","currentId","setCurrentId","dispatch","postData","setPostData","creator","title","message","tags","selectedFiles","post","state","posts","find","p","_id","classes","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","fileInput","base64","selectedFile","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { TextField, Button,Paper, Typography  } from '@material-ui/core';\nimport FileBase from \"react-file-base64\";\nimport { useDispatch } from 'react-redux';\nimport {createPost, updatePost} from \"../../actions/posts.js\";\nimport { useSelector } from 'react-redux';\n\n\nimport useStyles from \"./styles.js\";\nconst Form = ({currentId, setCurrentId}) => {\n    const dispatch = useDispatch();\n\n    const [postData, setPostData] = useState(\n        {\n            creator:\"\",\n            title:\"\",\n            message:\"\",\n            tags:\"\",\n            selectedFiles:\"\"\n        })\n\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n    const classes = useStyles();\n\n    useEffect(() =>{\n        if(post) setPostData(post);\n    }, [post])\n\n    const handleSubmit = (e) =>\n    {\n        e.preventDefault();\n        if(currentId){\n           dispatch(updatePost(currentId, postData))\n        }\n        else{\n            dispatch(createPost(postData));\n        }\n\n    }\n\n    const clear = () =>\n    {\n\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">Creating a memory</Typography>\n                    <TextField \n                    name=\"creator\" \n                    variant=\"outlined\"\n                    label=\"Creator\" \n                    fullWidth\n                    value={postData.creator}\n                    onChange={(e) => setPostData({...postData, creator:e.target.value})}/>\n                                <TextField \n                    name=\"title\" \n                    variant=\"outlined\"\n                    label=\"Title\" \n                    fullWidth\n                    value={postData.title}\n                    onChange={(e) => setPostData({...postData, title:e.target.value})}/>\n                                <TextField \n                    name=\"message\" \n                    variant=\"outlined\"\n                    label=\"Message\" \n                    fullWidth\n                    value={postData.message}\n                    onChange={(e) => setPostData({...postData, message:e.target.value})}/>\n                                <TextField \n                    name=\"tags\" \n                    variant=\"outlined\"\n                    label=\"Tags\" \n                    fullWidth\n                    value={postData.tags}\n                    onChange={(e) => setPostData({...postData, tags:e.target.value})}/>\n                 <div className={classes.fileInput}> \n                 <FileBase\n                 type=\"file\"\n                 multiple={false}\n                 onDone={(base64)=> {setPostData({...postData, selectedFile:base64})}}/>\n                 \n                 </div>\n                 <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                 <Button className={classes.buttonSubmit} variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}