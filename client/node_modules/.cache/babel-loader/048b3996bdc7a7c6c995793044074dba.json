{"ast":null,"code":"import { FETCH_ALL, DELETE, CREATE, UPDATE, LIKE } from \"../constants/actionTypes.js\";\nexport default ((posts = [], action) => {\n  switch (action.type) {\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    case FETCH_ALL:\n      return action.payload;\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload.id ? action.payload : post);\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload.id ? action.payload : post);\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["/Users/robertsalas/Repos/MemoriesProj/server/client/src/reducers/posts.js"],"names":["FETCH_ALL","DELETE","CREATE","UPDATE","LIKE","posts","action","type","filter","post","_id","payload","map","id"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,6BAAxD;AAGA,gBAAc,CAACC,KAAK,GAAC,EAAP,EAAWC,MAAX,KACd;AACG,UAAOA,MAAM,CAACC,IAAd;AAGI,SAAKN,MAAL;AACI,aAAOI,KAAK,CAACG,MAAN,CAAcC,IAAD,IAAQA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACK,OAAzC,CAAP;;AACH,SAAKX,SAAL;AACG,aAAOM,MAAM,CAACK,OAAd;;AACA,SAAKP,IAAL;AACC,aAAOC,KAAK,CAACO,GAAN,CAAWH,IAAD,IAAQA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACK,OAAP,CAAeE,EAA5B,GAAiCP,MAAM,CAACK,OAAxC,GAAkDF,IAApE,CAAP;;AACD,SAAKN,MAAL;AACC,aAAOE,KAAK,CAACO,GAAN,CAAWH,IAAD,IAAQA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACK,OAAP,CAAeE,EAA5B,GAAiCP,MAAM,CAACK,OAAxC,GAAkDF,IAApE,CAAP;;AACL,SAAKP,MAAL;AACI,aAAO,CAAC,GAAGG,KAAJ,EAAWC,MAAM,CAACK,OAAlB,CAAP;;AACH;AACI,aAAON,KAAP;AAdT;AAiBF,CAnBD","sourcesContent":["import { FETCH_ALL, DELETE, CREATE, UPDATE, LIKE } from \"../constants/actionTypes.js\";\n\n\nexport default(posts=[], action) => \n{\n   switch(action.type)\n   {\n      \n       case DELETE:\n           return posts.filter((post)=>post._id !== action.payload);\n        case FETCH_ALL:\n           return action.payload;\n           case LIKE:\n            return posts.map((post)=>post._id === action.payload.id ? action.payload : post);\n           case UPDATE:\n            return posts.map((post)=>post._id === action.payload.id ? action.payload : post);\n       case CREATE:\n           return [...posts, action.payload];\n        default:\n            return posts;\n   }\n\n}"]},"metadata":{},"sourceType":"module"}